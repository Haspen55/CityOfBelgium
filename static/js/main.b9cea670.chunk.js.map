{"version":3,"sources":["data/images/bruxelles.jpg","data/images/namur.jpg","data/images/anvers.jpg","data/images/liege.jpg","data/images/bruges.jpg","data/images/tournai.jpg","data/images/gand.jpg","components/ImageCard.js","components/TextCompo.js","App.js","reportWebVitals.js","index.js"],"names":["arrImages","brux","nam","anv","lie","bru","tou","gan","nomVilles","initialState","count","changeCount","state","action","type","Error","ImageCard","props","useReducer","dispatch","useEffect","document","addEventListener","e","keyCode","passCounter","console","log","className","onClick","length","alt","src","style","marginTop","color","TextCompo","arrText","compteur","App","useState","setCount","Fragment","counter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6KAAe,G,MAAA,IAA0B,uCCA1B,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,oCCA1B,MAA0B,iC,OCSnCA,EAAY,CAACC,EAAMC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC5CC,EAAY,CAChB,YACA,QACA,SACA,QACA,SACA,UACA,QAGIC,EAAe,CAAEC,MAAO,GAExBC,EAAc,SAACC,EAAOC,GAC1B,OAAQA,EAAOC,MACb,IAAK,UACH,MAAO,CAAEJ,MAAOE,EAAMF,MAAQ,GAChC,IAAK,WACH,MAAO,CAAEA,MAAOE,EAAMF,MAAQ,GAChC,QACE,MAAM,IAAIK,MAAM,kCAiEPC,EA7DG,SAACC,GAGjB,MAA0BC,qBAAWP,EAAaF,GAAlD,mBAAOG,EAAP,KAAcO,EAAd,KAEAC,qBAAU,WACRC,SAASC,iBAAiB,WAAW,SAACC,GAClB,KAAdA,EAAEC,SACJL,EAAS,CAAEL,KAAM,aAED,KAAdS,EAAEC,SACJL,EAAS,CAAEL,KAAM,iBAGpB,IAECF,EAAMF,MAAQ,IAChBE,EAAMF,MAAQ,GAEZE,EAAMF,MAAQ,IAChBE,EAAMF,MAAQ,GAahBU,qBAAU,WACRH,EAAMQ,YAAYb,EAAMF,SACvB,CAACE,EAAMF,MAAOO,IAEjBS,QAAQC,IAAIf,EAAMF,OASlB,OACE,sBAAKkB,UAAU,cAAf,UACE,wBAAQC,QATM,WAChBV,EAAS,CAAEL,KAAM,aACG,IAAhBF,EAAMF,QACRE,EAAMF,MAAQV,EAAU8B,OAAS,IAMjC,uBACA,gCACE,qBAAKC,IAAI,QAAQH,UAAU,QAAQI,IAAKhC,EAAUY,EAAMF,SACxD,oBAAIuB,MAAO,CAAEC,UAAW,GAAIC,MAAO,SAAnC,SACG3B,EAAUI,EAAMF,YAGrB,wBAAQmB,QAhCM,WAChBV,EAAS,CAAEL,KAAM,YACbF,EAAMF,OAASV,EAAU8B,OAAS,IACpClB,EAAMF,MAAQ,IA6Bd,qBACA,2BCpDS0B,MAnCf,SAAmBnB,GACjB,IAeMoB,EAAU,CAdd,iQAEA,8RAEA,uXAEA,gTAEA,yPAEA,+SAEA,oMAWF,OACE,8BACE,mBAAGT,UAAU,YAAb,SAEGS,EAAQpB,EAAMqB,eCXRC,MAff,WACE,MAA0BC,qBAA1B,mBAAO9B,EAAP,KAAc+B,EAAd,KAMA,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,EAAD,CAAWjB,YANI,SAACkB,GAClBF,EAASE,MAMP,cAAC,EAAD,CAAWL,SAAU5B,QCHZkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASmC,eAAe,SAM1BZ,K","file":"static/js/main.b9cea670.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bruxelles.95f044d7.jpg\";","export default __webpack_public_path__ + \"static/media/namur.86912b42.jpg\";","export default __webpack_public_path__ + \"static/media/anvers.d4fb0c3d.jpg\";","export default __webpack_public_path__ + \"static/media/liege.3b76ea2c.jpg\";","export default __webpack_public_path__ + \"static/media/bruges.aa4c1120.jpg\";","export default __webpack_public_path__ + \"static/media/tournai.ae4fbe45.jpg\";","export default __webpack_public_path__ + \"static/media/gand.a9e1c2e1.jpg\";","import React, { useEffect, useReducer } from 'react';\nimport brux from '../data/images/bruxelles.jpg';\nimport nam from '../data/images/namur.jpg';\nimport anv from '../data/images/anvers.jpg';\nimport lie from '../data/images/liege.jpg';\nimport bru from '../data/images/bruges.jpg';\nimport tou from '../data/images/tournai.jpg';\nimport gan from '../data/images/gand.jpg';\n\nconst arrImages = [brux, nam, anv, lie, bru, tou, gan];\nconst nomVilles = [\n  'Bruxelles',\n  'Namur',\n  'Anvers',\n  'Liege',\n  'Bruges',\n  'Tournai',\n  'Gand',\n];\n\nconst initialState = { count: 1 };\n\nconst changeCount = (state, action) => {\n  switch (action.type) {\n    case 'ajouter':\n      return { count: state.count + 1 };\n    case 'diminuer':\n      return { count: state.count - 1 };\n    default:\n      throw new Error('this action is not supported');\n  }\n};\n\nconst ImageCard = (props) => {\n  /*const [counter, setCounter] = useState(0);*/\n\n  const [state, dispatch] = useReducer(changeCount, initialState);\n\n  useEffect(() => {\n    document.addEventListener('keydown', (e) => {\n      if (e.keyCode === 37) {\n        dispatch({ type: 'diminuer' });\n      }\n      if (e.keyCode === 39) {\n        dispatch({ type: 'ajouter' });\n      }\n    });\n  }, []);\n\n  if (state.count < 0) {\n    state.count = 6;\n  }\n  if (state.count > 6) {\n    state.count = 0;\n  }\n\n  const increment = () => {\n    dispatch({ type: 'ajouter' });\n    if (state.count >= arrImages.length - 1) {\n      state.count = 0;\n    }\n  };\n  /*   let {passCounter} = props // destructuration objet , on aurait pu ne pas le noter et mettre directement props.passCounter(state.count) dans le useEffect juste en dessous\n    useEffect(() => {\n        passCounter(state.count)\n    }, []);*/\n  useEffect(() => {\n    props.passCounter(state.count);\n  }, [state.count, props]);\n\n  console.log(state.count);\n\n  const decrement = () => {\n    dispatch({ type: 'diminuer' });\n    if (state.count === 0) {\n      state.count = arrImages.length - 1;\n    }\n  };\n\n  return (\n    <div className=\"divCentrale\">\n      <button onClick={decrement}>Precedent</button>\n      <div>\n        <img alt=\"ville\" className=\"cadre\" src={arrImages[state.count]} />\n        <h1 style={{ marginTop: 50, color: 'black' }}>\n          {nomVilles[state.count]}\n        </h1>\n      </div>\n      <button onClick={increment}>Suivant</button>\n      <br />\n    </div>\n  );\n};\n\nexport default ImageCard;\n","import React from 'react';\n\nfunction TextCompo(props) {\n  const bruText =\n    \"Bruxelles ou la ville de Bruxelles est une commune de Belgique de 183 287 habitants, capitale de la Belgique, siège de la Communauté française et de la Communauté flamande, ainsi que siège de plusieurs institutions de l'Union européenne\";\n  const namText =\n    \"Namur est la capitale de la région de la Wallonie, en Belgique. À la confluence de la Meuse et de la Sambre se trouve la citadelle de Namur, une forteresse médiévale dotée de jardins, d'une vue panoramique et d'une statue de bronze représentant une tortue géante\";\n  const anvText =\n    \"Anvers est une ville portuaire belge située sur l'Escaut, dont l'histoire remonte au Moyen Âge. Au centre-ville, le quartier des diamantaires vieux de plusieurs siècles est le repère de milliers de marchands, tailleurs et polisseurs de diamants. L'architecture Renaissance d'Anvers se reflète dans la Grand-Place, située au cœur de la vieille ville.\";\n  const liegeText =\n    \" Liège, ville belge bordant la Meuse située en Wallonie, la région francophone, a longtemps constitué un centre commercial et culturel. Sa vieille ville recèle de nombreux sites d'intérêt datant de l'époque médiévale, comme la collégiale romane de Saint-Barthélemy.\";\n  const brugeText =\n    'Bruges, capitale de la Flandre-Occidentale au nord-ouest de la Belgique, se distingue par ses canaux, ses rues pavées et ses bâtiments médiévaux. Son port, Zeebruges, est un centre important pour la pêche et le commerce européen';\n  const tourText =\n    \"Tournai est une ville située à l'ouest de la Belgique, près de la frontière française. Elle est réputée pour sa vaste cathédrale Notre-Dame, qui possède 5 tours et une rosace. Non loin de là, la Grand-Place est une place triangulaire bordée de bars et de restaurants.\";\n  const gandText =\n    'Gand est une ville portuaire située au nord-ouest de la Belgique, à la confluence de la rivière Lys et du fleuve Escaut. Au Moyen-Âge, elle fut une cité-État de premier plan.';\n\n  const arrText = [\n    bruText,\n    namText,\n    anvText,\n    liegeText,\n    brugeText,\n    tourText,\n    gandText,\n  ];\n  return (\n    <div>\n      <p className=\"textVille\">\n        {/*{arrText[counter]}*/}\n        {arrText[props.compteur]}\n      </p>\n    </div>\n  );\n}\n\nexport default TextCompo;\n","import React, { useState } from 'react';\nimport './App.css';\nimport ImageCard from './components/ImageCard';\nimport TextCompo from './components/TextCompo';\n\nfunction App() {\n  const [count, setCount] = useState();\n\n  const getCounter = (counter) => {\n    setCount(counter);\n  };\n\n  return (\n    <React.Fragment>\n      <ImageCard passCounter={getCounter} />\n      <TextCompo compteur={count} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n\n// explication Cleanup useEffect;\n\n/* import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n */\n//Waits for a period of time then resolves , Créer un timer .\n\n/*   function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n    console.log(timeout)\n\n  useEffect(() => {\n    let isCancelled = false;\n\n     console.log(isCancelled);\n\n    const handleChange = async () => {\n      //const data = await getdata()\n      await timeout(2000); \n\n      if (!isCancelled) {\n        alert(`A name was changed: ${value}`);\n      }\n    };\n\n    handleChange();\n    //Cleanup function is called when useEffect is called again or on unmount\n    return () => {\n      isCancelled = true;\n    console.log('Cleaned up')\n    };\n  }, [value]);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <form>\n          <label>\n            Name:\n            <input\n              type=\"text\"\n              value={value}\n              onChange={(event) => setValue(event.target.value)}\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    </div>\n  );\n}\n\n/* \nexplications plus claires  : en tapant sur une touche en rerend le component donc le useeffect se relance et à chaque update ou démontage d un component la fonction cleanUp se lance , donc ici en faisant await timeout(2000)  et en tapant sur une  touche on bloque la continuité du code donc celui ci skip cette partie :  if (!isCancelled) {\n        alert(`A name was changed: ${value}`);\n      } .\nEt passe directement à la cleanUp function où  isCancelled vaut true et de ce fait ne déclenché pas l alert   : A name was changed: ${value} */\n\n/* export default App; */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}